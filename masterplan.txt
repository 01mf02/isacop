# Preprocessing

- Add #
- Negate goal
- Create prenex normal form

# Skolemisation

- Strip away quantifiers from assumptions -> (quantifier, assumption) list
- Zip each quantifier with bound variable number
- For every existential quantifier, replace corresponding bound variable
  by Skolem term depending on the previous bound variables
- Use something like:
    val (x, c) = Name.variant (Name.skolem "asd") Name.context;
    val (y, _) = Name.variant "asd" c;

# Translation to FO terms

- Map every bound variable to the variable index
- Keep a table from constants/frees to integers
- Replace every constant/free accordingly
- fold_map over conjuncts/disjuncts

Construct proof

# Ground extension steps

- Get (FO_variable, FO_term) list for theorem
- If all term references to foreign Skolem functions are in mapping,
  instantiate theorem with corresponding terms and
  add Skolem function reference to mapping (FO_term, HO_term)
- Else postpone theorem
- Iterate this procedure over all theorems in extension steps
- If procedure terminates with non-empty list, fail
- Map every extension step theorem now to its instantiated version
  and select the conjunct with the correct assumption number


